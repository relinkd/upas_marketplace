var searchIndex = new Map(JSON.parse('[\
["indexer",{"doc":"Indexer Canister","t":"CHCCCCHHHHHHHHHHFSSIFNNNNNNNNNNONNNNNNNNNNOONONNNNNNNNNNOI","n":["access","get_candid_pointer","logic","state","storable","types","caller","is_controller","add_unverified_issuer","get_principal_achievements","get_principal_achievements_with_metadata","verify_issuer","_set_issuer","get_issuer","get_issuers_batch","remove_issuer","Issuer","MAX_KEY_SIZE","MAX_VALUE_SIZE","Memory","StorablePrincipal","_ty","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","description","deserialize","eq","from","from","from_bytes","from_bytes","id","idl_serialize","into","into","issuer_type","name","partial_cmp","reputation_module","to_bytes","to_bytes","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","verified","Icrc7TokenMetadata"],"q":[[0,"indexer"],[6,"indexer::access"],[8,"indexer::logic"],[12,"indexer::state"],[16,"indexer::storable"],[57,"indexer::types"],[58,"std::os::raw"],[59,"ic_principal"],[60,"alloc::string"],[61,"core::result"],[62,"alloc::vec"],[63,"core::option"],[64,"candid::types::internal"],[65,"core::cmp"],[66,"serde::de"],[67,"alloc::borrow"],[68,"candid::types::internal"],[69,"core::any"]],"d":["This module provides access control functions for the …","","This module represents all logic to work with indexer …","This module provides functions to manage the state of the …","This module implements the Storable trait for various …","This module defines types used in the indexer canister.","Returns the principal ID of the caller.","Checks if the caller is a controller of the canister.","Adds an unverified issuer to the system.","Retrieves the achievements (token IDs) for a given …","Retrieves the achievements with metadata for a given …","Verifies an existing issuer and updates their information.","Sets the issuer for the given principal.","Retrieves the issuer associated with the given principal.","Retrieves a batch of issuers starting from the given …","Removes the issuer associated with the given principal.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,15,4,15,4,15,4,15,4,15,4,4,15,15,4,15,4,4,4,15,4,4,4,15,4,15,4,15,4,15,4,15,4,15,4,4,0],"f":"`{{}b}````{{}d}{{}f}{d{{l{hj}}}}{d{{l{{A`{{Ab{d{A`{n}}}}}}j}}}}{d{{l{{A`{{Ab{d{A`{Ad}}}}}}j}}}}{{dj{Ab{jjj}}}{{l{Afj}}}}{{dh}{{l{Afj}}}}4{{{Ah{d}}Aj}{{A`{{Ab{dh}}}}}}{d{{l{Afj}}}}`````{{}Al}{ce{}{}}000{AnAn}{hh}{{ce}Af{}{}}0{{AnAn}B`}`{c{{l{h}}}Bb}{{AnAn}f}{cc{}}0{{{Bh{{Bf{Bd}}}}}An}{{{Bh{{Bf{Bd}}}}}h}{{}Bj}{{hc}{{l{Af}}}Bl};;``{{AnAn}{{Ah{B`}}}}`{An{{Bh{{Bf{Bd}}}}}}{h{{Bh{{Bf{Bd}}}}}}>>{c{{l{e}}}{}{}}000{cBn{}}0``","c":[],"p":[[8,"c_char",58],[5,"Principal",59],[1,"bool"],[5,"Issuer",16],[5,"String",60],[6,"Result",61],[1,"u128"],[5,"Vec",62],[1,"tuple"],[8,"Icrc7TokenMetadata",57],[1,"unit"],[6,"Option",63],[1,"usize"],[5,"Type",64],[5,"StorablePrincipal",16],[6,"Ordering",65],[10,"Deserializer",66],[1,"u8"],[1,"slice"],[6,"Cow",67],[5,"TypeId",64],[10,"Serializer",68],[5,"TypeId",69]],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
